/* -*- c -*- This FLex file was machine-generated by the BNF converter */
%option noyywrap noinput nounput
%top{
/* strdup was not in the ISO C standard before 6/2019 (C2x), but in POSIX 1003.1.
 * See: https://en.cppreference.com/w/c/experimental/dynamic/strdup
 * Setting _POSIX_C_SOURCE to 200809L activates strdup in string.h.
 */
#define _POSIX_C_SOURCE 200809L
}
%{
#define yylval rholang_mercury_lval
#define yylloc rholang_mercury_lloc
#define init_lexer rholang_mercury__init_lexer
#include "Parser.h"

static void update_loc(YYLTYPE* loc, char* text)
{
  loc->first_line = loc->last_line;
  loc->first_column = loc->last_column;
  int i = 0;
  for (; text[i] != '\0'; ++i) {
      if (text[i] == '\n') {
          ++loc->last_line;
          loc->last_column = 0;
      } else {
          ++loc->last_column;
      }
  }
}
#define YY_USER_ACTION update_loc(&yylloc, yytext);

%}

LETTER [a-zA-Z]
CAPITAL [A-Z]
SMALL [a-z]
DIGIT [0-9]
IDENT [a-zA-Z0-9'_]
%START YYINITIAL CHAR CHARESC CHAREND STRING ESCAPED COMMENT

%%  /* Rules. */

<YYINITIAL>"{"      	 return _SYMB_0;
<YYINITIAL>"}"      	 return _SYMB_1;
<YYINITIAL>"~"      	 return _SYMB_2;
<YYINITIAL>"/\\"      	 return _SYMB_3;
<YYINITIAL>"\\/"      	 return _SYMB_4;
<YYINITIAL>"*"      	 return _SYMB_5;
<YYINITIAL>"."      	 return _SYMB_6;
<YYINITIAL>"("      	 return _SYMB_7;
<YYINITIAL>")"      	 return _SYMB_8;
<YYINITIAL>"-"      	 return _SYMB_9;
<YYINITIAL>"/"      	 return _SYMB_10;
<YYINITIAL>"%"      	 return _SYMB_11;
<YYINITIAL>"%%"      	 return _SYMB_12;
<YYINITIAL>"+"      	 return _SYMB_13;
<YYINITIAL>"++"      	 return _SYMB_14;
<YYINITIAL>"--"      	 return _SYMB_15;
<YYINITIAL>"<"      	 return _SYMB_16;
<YYINITIAL>"<="      	 return _SYMB_17;
<YYINITIAL>">"      	 return _SYMB_18;
<YYINITIAL>">="      	 return _SYMB_19;
<YYINITIAL>"=="      	 return _SYMB_20;
<YYINITIAL>"!="      	 return _SYMB_21;
<YYINITIAL>"="      	 return _SYMB_22;
<YYINITIAL>"|"      	 return _SYMB_23;
<YYINITIAL>","      	 return _SYMB_24;
<YYINITIAL>"_"      	 return _SYMB_25;
<YYINITIAL>"@"      	 return _SYMB_26;
<YYINITIAL>"bundle+"      	 return _SYMB_27;
<YYINITIAL>"bundle-"      	 return _SYMB_28;
<YYINITIAL>"<-"      	 return _SYMB_29;
<YYINITIAL>";"      	 return _SYMB_30;
<YYINITIAL>"<<-"      	 return _SYMB_31;
<YYINITIAL>"!"      	 return _SYMB_32;
<YYINITIAL>"!!"      	 return _SYMB_33;
<YYINITIAL>"=>"      	 return _SYMB_34;
<YYINITIAL>"["      	 return _SYMB_35;
<YYINITIAL>"]"      	 return _SYMB_36;
<YYINITIAL>":"      	 return _SYMB_37;
<YYINITIAL>",)"      	 return _SYMB_38;
<YYINITIAL>"..."      	 return _SYMB_39;
<YYINITIAL>"Bool"      	 return _SYMB_40;
<YYINITIAL>"ByteArray"      	 return _SYMB_41;
<YYINITIAL>"Int"      	 return _SYMB_42;
<YYINITIAL>"Nil"      	 return _SYMB_43;
<YYINITIAL>"Set"      	 return _SYMB_44;
<YYINITIAL>"String"      	 return _SYMB_45;
<YYINITIAL>"Uri"      	 return _SYMB_46;
<YYINITIAL>"and"      	 return _SYMB_47;
<YYINITIAL>"bundle"      	 return _SYMB_48;
<YYINITIAL>"bundle0"      	 return _SYMB_49;
<YYINITIAL>"contract"      	 return _SYMB_50;
<YYINITIAL>"else"      	 return _SYMB_51;
<YYINITIAL>"false"      	 return _SYMB_52;
<YYINITIAL>"for"      	 return _SYMB_53;
<YYINITIAL>"if"      	 return _SYMB_54;
<YYINITIAL>"in"      	 return _SYMB_55;
<YYINITIAL>"match"      	 return _SYMB_56;
<YYINITIAL>"matches"      	 return _SYMB_57;
<YYINITIAL>"new"      	 return _SYMB_58;
<YYINITIAL>"not"      	 return _SYMB_59;
<YYINITIAL>"or"      	 return _SYMB_60;
<YYINITIAL>"select"      	 return _SYMB_61;
<YYINITIAL>"true"      	 return _SYMB_62;

<YYINITIAL>"//"[^\n]* /* skip */; /* BNFC: comment "//" */
<YYINITIAL>"/*" BEGIN COMMENT;
<COMMENT>"*/" BEGIN YYINITIAL;
<COMMENT>.    /* skip */;
<COMMENT>[\n] /* skip */;

<YYINITIAL>{DIGIT}+    	 yylval._string = strdup(yytext); return _SYMB_63;
<YYINITIAL>\"([^\"\\]|\\(\"|\\|n|t))*\"    	 yylval._string = strdup(yytext); return _SYMB_64;
<YYINITIAL>`([^\\`]|\\(\\|`))*`    	 yylval._string = strdup(yytext); return _SYMB_65;
<YYINITIAL>('|{LETTER})('|\_|({DIGIT}|{LETTER}))*|\_('|\_|({DIGIT}|{LETTER}))+    	 yylval._string = strdup(yytext); return _SYMB_66;
<YYINITIAL>[ \t\r\n\f]      	 /* ignore white space. */;
<YYINITIAL>.      	 return _ERROR_;

%%  /* Initialization code. */

void init_lexer(FILE *inp)
{
  yyrestart(inp);
  yylloc.first_line   = 1;
  yylloc.first_column = 1;
  yylloc.last_line    = 1;
  yylloc.last_column  = 1;
  BEGIN YYINITIAL;
}

