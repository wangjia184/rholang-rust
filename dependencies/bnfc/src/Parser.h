#ifndef PARSER_HEADER_FILE
#define PARSER_HEADER_FILE

#include "Absyn.h"

Proc  pProc(FILE *inp);
Proc psProc(const char *str);
Proc  pProc1(FILE *inp);
Proc psProc1(const char *str);
Proc  pProc2(FILE *inp);
Proc psProc2(const char *str);
Proc  pProc3(FILE *inp);
Proc psProc3(const char *str);
Proc  pProc4(FILE *inp);
Proc psProc4(const char *str);
Proc  pProc5(FILE *inp);
Proc psProc5(const char *str);
Proc  pProc6(FILE *inp);
Proc psProc6(const char *str);
Proc  pProc7(FILE *inp);
Proc psProc7(const char *str);
Proc  pProc8(FILE *inp);
Proc psProc8(const char *str);
Proc  pProc9(FILE *inp);
Proc psProc9(const char *str);
Proc  pProc10(FILE *inp);
Proc psProc10(const char *str);
Proc  pProc11(FILE *inp);
Proc psProc11(const char *str);
Proc  pProc12(FILE *inp);
Proc psProc12(const char *str);
Proc  pProc13(FILE *inp);
Proc psProc13(const char *str);
Proc  pProc14(FILE *inp);
Proc psProc14(const char *str);
Proc  pProc15(FILE *inp);
Proc psProc15(const char *str);
Proc  pProc16(FILE *inp);
Proc psProc16(const char *str);
ListProc  pListProc(FILE *inp);
ListProc psListProc(const char *str);
ProcVar  pProcVar(FILE *inp);
ProcVar psProcVar(const char *str);
Name  pName(FILE *inp);
Name psName(const char *str);
ListName  pListName(FILE *inp);
ListName psListName(const char *str);
Bundle  pBundle(FILE *inp);
Bundle psBundle(const char *str);
Receipt  pReceipt(FILE *inp);
Receipt psReceipt(const char *str);
ReceiptLinearImpl  pReceiptLinearImpl(FILE *inp);
ReceiptLinearImpl psReceiptLinearImpl(const char *str);
LinearBind  pLinearBind(FILE *inp);
LinearBind psLinearBind(const char *str);
ListLinearBind  pListLinearBind(FILE *inp);
ListLinearBind psListLinearBind(const char *str);
ReceiptRepeatedImpl  pReceiptRepeatedImpl(FILE *inp);
ReceiptRepeatedImpl psReceiptRepeatedImpl(const char *str);
RepeatedBind  pRepeatedBind(FILE *inp);
RepeatedBind psRepeatedBind(const char *str);
ListRepeatedBind  pListRepeatedBind(FILE *inp);
ListRepeatedBind psListRepeatedBind(const char *str);
ReceiptPeekImpl  pReceiptPeekImpl(FILE *inp);
ReceiptPeekImpl psReceiptPeekImpl(const char *str);
PeekBind  pPeekBind(FILE *inp);
PeekBind psPeekBind(const char *str);
ListPeekBind  pListPeekBind(FILE *inp);
ListPeekBind psListPeekBind(const char *str);
Send  pSend(FILE *inp);
Send psSend(const char *str);
Branch  pBranch(FILE *inp);
Branch psBranch(const char *str);
ListBranch  pListBranch(FILE *inp);
ListBranch psListBranch(const char *str);
Case  pCase(FILE *inp);
Case psCase(const char *str);
ListCase  pListCase(FILE *inp);
ListCase psListCase(const char *str);
NameDecl  pNameDecl(FILE *inp);
NameDecl psNameDecl(const char *str);
ListNameDecl  pListNameDecl(FILE *inp);
ListNameDecl psListNameDecl(const char *str);
BoolLiteral  pBoolLiteral(FILE *inp);
BoolLiteral psBoolLiteral(const char *str);
Ground  pGround(FILE *inp);
Ground psGround(const char *str);
Collection  pCollection(FILE *inp);
Collection psCollection(const char *str);
KeyValuePair  pKeyValuePair(FILE *inp);
KeyValuePair psKeyValuePair(const char *str);
ListKeyValuePair  pListKeyValuePair(FILE *inp);
ListKeyValuePair psListKeyValuePair(const char *str);
Tuple  pTuple(FILE *inp);
Tuple psTuple(const char *str);
ProcRemainder  pProcRemainder(FILE *inp);
ProcRemainder psProcRemainder(const char *str);
NameRemainder  pNameRemainder(FILE *inp);
NameRemainder psNameRemainder(const char *str);
VarRefKind  pVarRefKind(FILE *inp);
VarRefKind psVarRefKind(const char *str);
SimpleType  pSimpleType(FILE *inp);
SimpleType psSimpleType(const char *str);

#endif
